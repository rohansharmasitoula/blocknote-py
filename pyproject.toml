[project]
name = "blocknote-py"
version = "0.1.0"
description = "Python support for Blocknote.js"
authors = [{ name = "Rohan Sharma Sitoula", email = "rohansharmasitoula@gmail.com" }]
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic",
    "markdown-it-py",
]

[project.optional-dependencies]
test = [
    "pytest",
]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.wheel.force-include]
"src" = "blocknote"

[tool.black]
line-length = 100
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "markdown_it.*",
    "tests.*",
    "*.__tests__.*",
]
ignore_missing_imports = true
ignore_errors = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[dependency-groups]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=5.0.0,<6.0.0",
    "mypy>=1.0.0",
]

[tool.hatch.envs.default]
dependencies = [
    "black",
    "isort",
    "flake8",
    "mypy",
]

[tool.hatch.envs.default.scripts]
lint = "uv run flake8 src"
format = "uv run black src && uv run isort src"
type-check = "uv run mypy src"
check-all = "uv run flake8 src && uv run black --check src && uv run isort --check-only src && uv run mypy src"
fix-all = "uv run black src && uv run isort src"

[tool.pytest.ini_options]
testpaths = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__tests__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
