name: Deploy Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install mkdocs-material mkdocstrings[python]

      - name: Generate coverage badge
        run: |
          # Get latest coverage from CI artifacts or calculate from current code
          COVERAGE=$(uv run python -c "
          import subprocess
          import re
          try:
              result = subprocess.run(['uv', 'run', 'python', '-m', 'pytest', '--cov=src', '--cov-report=term-missing'], 
                                    capture_output=True, text=True, cwd='.')
              coverage_line = [line for line in result.stdout.split('\n') if 'TOTAL' in line]
              if coverage_line:
                  match = re.search(r'(\d+)%', coverage_line[0])
                  if match:
                      print(match.group(1))
                  else:
                      print('0')
              else:
                  print('0')
          except:
              print('0')
          ")
          
          # Determine badge color
          if [ "$COVERAGE" -ge 90 ]; then
            COLOR="brightgreen"
          elif [ "$COVERAGE" -ge 80 ]; then
            COLOR="green"
          elif [ "$COVERAGE" -ge 70 ]; then
            COLOR="yellow"
          elif [ "$COVERAGE" -ge 60 ]; then
            COLOR="orange"
          else
            COLOR="red"
          fi
          
          # Create coverage badge and save to docs
          mkdir -p site/assets
          curl -s "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}" > site/assets/coverage-badge.svg

      - name: Build with MkDocs
        run: |
          uv run mkdocs build --clean --strict

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
